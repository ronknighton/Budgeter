@model Budgeter.Models.Budget
@using Budgeter.Helpers
@{
    ViewBag.Title = "Edit";
    var userHelper = new UsersHelper();
}

<div class="col-md-offset-4 col-md-4">
    <div class="tile">
        <h2 class="center">Edit Budget</h2>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.Created)
                @Html.HiddenFor(model => model.HouseholdId)
                @Html.HiddenFor(model => model.Active)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Household", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.DropDownList("HouseholdId", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.HouseholdId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Budget Items", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.ListBox("BudgetItems", null, htmlAttributes: new { @class = "form-control" })
                        @*@Html.ValidationMessageFor(model => model.BudgetId, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            
            @if (userHelper.IsHOH())
            {
                @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @class = "btn btn-sm" })<br />
            }
            @Html.ActionLink("Back to Household", "MyHousehold", "Households")<br />
            @Html.ActionLink("Back to Budget", "Details", new { id = Model.Id })
        </div>
    </div>
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
