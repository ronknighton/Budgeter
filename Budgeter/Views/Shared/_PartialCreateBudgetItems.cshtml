@model Budgeter.Models.BudgetItem



<div class="center">
    <label class="fontOutline">Create Budget Item</label>
</div>


@using (Html.BeginForm("Create", "BudgetItems", FormMethod.Post))
{
    @Html.AntiForgeryToken()
   

    <table class="table">
        <tr>
            <th>@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })</th>
            <th>@Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })</th>           
            <th>@Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })</th>
            <th>Create</th>
        </tr>
        <tr>
            <td>@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })</td>
            <td>@Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })</td>            
            <td>@Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })</td>
            <td><input type="submit" value="Create" class="btn btn-default" /></td>
        </tr>
    </table>

   
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


