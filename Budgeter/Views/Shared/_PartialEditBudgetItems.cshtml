@model Budgeter.Models.BudgetItem
    @using Budgeter.Helpers
@{ 
    var budgetHelper = new BudgetsHelper();
}



   <div class="center">
    <label class="fontOutline">Edit Budget Item</label>
</div>


    @using (Html.BeginForm("Edit", "BudgetItems", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.BudgetId)
        @Html.HiddenFor(model => model.CategoryId)
        @Html.HiddenFor(model => model.Active)

        <table class="table">
            <tr>
                <th>@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })</th>
                <th>@Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })</th>
               
                <th>@Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })</th>
                <th>Save Changes</th>
            </tr>
            <tr>
                <td>@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })</td>
                <td>@Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })</td>
              
                <td>@Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control", disabled = "diabled" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })</td>
                <td><input type="submit" value="Save" class="btn btn-default" />
                @Html.ActionLink("Cancel", "Details", "Budgets", new { id = budgetHelper.GetBudgetId() }, new { @class = "btn btn-default" })
                </td>

            </tr>
        </table>         
 
    }

  

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


